// This file is auto-generated by @hey-api/openapi-ts

export type AudioFormat = 'aac' | 'flac' | 'm4a' | 'mp3' | 'opus' | 'wav';

export const AudioFormat = {
	AAC: 'aac',
	FLAC: 'flac',
	M4A: 'm4a',
	MP3: 'mp3',
	OPUS: 'opus',
	WAV: 'wav'
} as const;

export type AvailableDownloadOptions = {
	format: Array<AudioFormat | VideoFormat>;
	quality: Array<DownloadQuality>;
	embed_metadata: Array<boolean>;
	embed_thumbnail: Array<boolean>;
	embed_subtitles: Array<boolean>;
};

export type Channel = {
	name: string;
	url: string;
	thumbnail: string;
};

export type Download = {
	video: Video;
	options: DownloadOptions;
	status: DownloadStatus;
};

export type DownloadInput = {
	video: Video;
	options: DownloadOptions;
};

export type DownloadOptions = {
	format: AudioFormat | VideoFormat;
	quality: DownloadQuality;
	embed_metadata: boolean;
	embed_thumbnail: boolean;
	embed_subtitles: boolean;
};

export type DownloadQuality = 'best' | 'worst';

export const DownloadQuality = {
	BEST: 'best',
	WORST: 'worst'
} as const;

export type DownloadState = 'WAITING' | 'DOWNLOADING' | 'PROCESSING' | 'DONE' | 'ERROR';

export const DownloadState = {
	WAITING: 'WAITING',
	DOWNLOADING: 'DOWNLOADING',
	PROCESSING: 'PROCESSING',
	DONE: 'DONE',
	ERROR: 'ERROR'
} as const;

export type DownloadStatus = {
	state: DownloadState;
	downloaded_bytes?: number | null;
	total_bytes?: number | null;
	elapsed?: number | null;
	eta?: number | null;
	speed?: number | null;
	postprocessor?: string | null;
	progress: number | null;
};

export type HttpValidationError = {
	detail?: Array<ValidationError>;
};

export type Session = {
	id: string;
};

export type ValidationError = {
	loc: Array<string | number>;
	msg: string;
	type: string;
};

export type Video = {
	id: string;
	url: string;
	title: string;
	duration: string;
	thumbnail: string;
	channel: Channel;
};

export type VideoFormat = 'avi' | 'flv' | 'mkv' | 'mov' | 'mp4' | 'webm';

export const VideoFormat = {
	AVI: 'avi',
	FLV: 'flv',
	MKV: 'mkv',
	MOV: 'mov',
	MP4: 'mp4',
	WEBM: 'webm'
} as const;

export type GetSearchData = {
	body?: never;
	path?: never;
	query: {
		query: string;
	};
	url: '/search';
};

export type GetSearchErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
	/**
	 * Not Found
	 */
	404: unknown;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetSearchError = GetSearchErrors[keyof GetSearchErrors];

export type GetSearchResponses = {
	/**
	 * Successful Response
	 */
	200: Array<Video>;
};

export type GetSearchResponse = GetSearchResponses[keyof GetSearchResponses];

export type GetNextSearchData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/search/next';
};

export type GetNextSearchErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
	/**
	 * Not Found
	 */
	404: unknown;
};

export type GetNextSearchResponses = {
	/**
	 * Successful Response
	 */
	200: Array<Video>;
};

export type GetNextSearchResponse = GetNextSearchResponses[keyof GetNextSearchResponses];

export type GetVideoData = {
	body?: never;
	path?: never;
	query: {
		id: string;
	};
	url: '/search/video';
};

export type GetVideoErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
	/**
	 * Not Found
	 */
	404: unknown;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetVideoError = GetVideoErrors[keyof GetVideoErrors];

export type GetVideoResponses = {
	/**
	 * Successful Response
	 */
	200: Video;
};

export type GetVideoResponse = GetVideoResponses[keyof GetVideoResponses];

export type DeleteSessionData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/session';
};

export type DeleteSessionErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
};

export type DeleteSessionResponses = {
	/**
	 * Successful Response
	 */
	204: void;
};

export type DeleteSessionResponse = DeleteSessionResponses[keyof DeleteSessionResponses];

export type GetSessionData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/session';
};

export type GetSessionResponses = {
	/**
	 * Successful Response
	 */
	200: Session;
};

export type GetSessionResponse = GetSessionResponses[keyof GetSessionResponses];

export type GetSessionValidateData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/session/validate';
};

export type GetSessionValidateErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
};

export type GetSessionValidateResponses = {
	/**
	 * Successful Response
	 */
	200: Session;
};

export type GetSessionValidateResponse =
	GetSessionValidateResponses[keyof GetSessionValidateResponses];

export type GetDownloadsData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/downloads';
};

export type GetDownloadsErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
};

export type GetDownloadsResponses = {
	/**
	 * Successful Response
	 */
	200: Array<Download>;
};

export type GetDownloadsResponse = GetDownloadsResponses[keyof GetDownloadsResponses];

export type PostDownloadsData = {
	body: DownloadInput;
	path?: never;
	query?: never;
	url: '/downloads';
};

export type PostDownloadsErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type PostDownloadsError = PostDownloadsErrors[keyof PostDownloadsErrors];

export type PostDownloadsResponses = {
	/**
	 * Successful Response
	 */
	201: Download;
};

export type PostDownloadsResponse = PostDownloadsResponses[keyof PostDownloadsResponses];

export type PutDownloadsData = {
	body: DownloadInput;
	path?: never;
	query?: never;
	url: '/downloads';
};

export type PutDownloadsErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type PutDownloadsError = PutDownloadsErrors[keyof PutDownloadsErrors];

export type PutDownloadsResponses = {
	/**
	 * Successful Response
	 */
	200: Download;
};

export type PutDownloadsResponse = PutDownloadsResponses[keyof PutDownloadsResponses];

export type GetDownloadsOptionsData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/downloads/options';
};

export type GetDownloadsOptionsErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
};

export type GetDownloadsOptionsResponses = {
	/**
	 * Successful Response
	 */
	200: AvailableDownloadOptions;
};

export type GetDownloadsOptionsResponse =
	GetDownloadsOptionsResponses[keyof GetDownloadsOptionsResponses];

export type DeleteDownloadData = {
	body?: never;
	path: {
		download_id: string;
	};
	query?: never;
	url: '/downloads/{download_id}';
};

export type DeleteDownloadErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
	/**
	 * Not Found
	 */
	404: unknown;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type DeleteDownloadError = DeleteDownloadErrors[keyof DeleteDownloadErrors];

export type DeleteDownloadResponses = {
	/**
	 * Successful Response
	 */
	204: void;
};

export type DeleteDownloadResponse = DeleteDownloadResponses[keyof DeleteDownloadResponses];

export type GetDownloadData = {
	body?: never;
	path: {
		download_id: string;
	};
	query?: never;
	url: '/downloads/{download_id}';
};

export type GetDownloadErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
	/**
	 * Not Found
	 */
	404: unknown;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetDownloadError = GetDownloadErrors[keyof GetDownloadErrors];

export type GetDownloadResponses = {
	/**
	 * Successful Response
	 */
	200: Download;
};

export type GetDownloadResponse = GetDownloadResponses[keyof GetDownloadResponses];

export type GetDownloadFileData = {
	body?: never;
	path: {
		download_id: string;
	};
	query?: never;
	url: '/downloads/{download_id}/file';
};

export type GetDownloadFileErrors = {
	/**
	 * Forbidden
	 */
	403: unknown;
	/**
	 * Not Found
	 */
	404: unknown;
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetDownloadFileError = GetDownloadFileErrors[keyof GetDownloadFileErrors];

export type GetDownloadFileResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};
